// src/services/bookingService.js
// This will be the new service to interact with your Java backend

const API_BASE_URL = 'http://localhost:8082/api';

export const createBooking = async (bookingData) => {
    try {
        const response = await fetch(`${API_BASE_URL}/bookings`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                // You might need an Authorization header if your API is secured
                // 'Authorization': `Bearer ${token}`
            },
            body: JSON.stringify(bookingData)
        });

        if (!response.ok) {
            // Throw an error if the server response is not successful
            const errorData = await response.json();
            throw new Error(errorData.message || 'Failed to create booking on the server.');
        }

        const result = await response.json();
        // The result should contain the bookingId generated by the backend
        return result;

    } catch (error) {
        console.error('Error creating booking:', error);
        throw error;
    }
};

// This function is no longer needed since you can fetch booking details from the backend
// instead of local storage.
// export const getBookingById = async (bookingId) => {
//     return new Promise((resolve, reject) => {
//         // ... (mock logic for local storage)
//     });
// };